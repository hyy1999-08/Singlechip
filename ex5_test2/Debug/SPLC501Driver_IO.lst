Generalplus u'nSP Assembler - Ver. 1.14.14.2
              Listing File Has Been Relocated
                            	//***************************************************************************//
                            	//文件描述：SPLC501底层驱动程序，主要包括对液晶的IO口初始化、写指令、写数据、
                            	//读数据，以及西文ASCII表数据
                            	//声明：	小丑	20050518	Sunnorth	Mz Design
                            	//
                            	//
                            	//***************************************************************************//
                            	.include SPLC501Driver_IO.inc
                     <      	.DEFINE	P_IOA_Data   		0x7000         // Write Data into data register and read from IOA pad
                     <      	.DEFINE P_IOA_Buffer        0x7001         // Write Data into buffer register and read from buffer register
                     <      	.DEFINE P_IOA_Dir           0x7002         // Direction vector for IOA
                     <      	.DEFINE P_IOA_Attrib        0x7003         // Attribute vector for IOA
                     <      	.DEFINE P_IOA_Latch         0x7004         // Latch PortA data for key change wake-up
                     <      	
                     <      	.DEFINE P_IOB_Data         	0x7005         // Write Data into the data register and read from IOB pad
                     <      	.DEFINE P_IOB_Buffer        0x7006         // Write Data into buffer register and read from buffer register
                     <      	.DEFINE P_IOB_Dir           0x7007         // Direction vector for IOB
                     <      	.DEFINE P_IOB_Attrib        0x7008         // Attribute vector for IOB
                     <      	//端口需要改动时需要修改以下定义
                     <      	
                     <      	.define	DATA_PORT_HIGHT	0x00		//数据口输出高八位定义，若数据接口为IO端口的高八位，则不屏蔽
                     <      	.define	M_IO_DATA_MASK	0xff00			//若数据口为高八位，则定义值为0xff00
                     <      	
                     <      	.define M_IO_EP			0x0040			//EP与SPCE061A的接口定义
                     <      	.define	M_IO_RW			0x0020			//RW与SPCE061A的接口定义
                     <      	.define	M_IO_AO			0x0010			//AO与SPCE061A的接口定义
                     <      	.define	M_IO_CS			0x0200			//CS与SPCE061A的接口定义
                     <      	//数据端口定义
                     <      	.define	P_IO_Data_D		P_IOA_Data
                     <      	.define	P_IO_Data_A		P_IOA_Attrib
                     <      	.define	P_IO_Data_Di	P_IOA_Dir
                     <      	.define P_IO_Data_B		P_IOA_Buffer
                     <      	//控制端口定义
                     <      	.define	P_IO_Ctrl_D		P_IOB_Data
                     <      	.define	P_IO_Ctrl_A		P_IOB_Attrib
                     <      	.define	P_IO_Ctrl_Di	P_IOB_Dir
                     <      	.define P_IO_Ctrl_B		P_IOB_Buffer
                     <      	//.....end端口修改即修订到前面即可
                     <      	.define	P_IO_Data		P_IO_Data_D
                     <      	.define	P_IO_Ctrl		P_IO_Ctrl_D
00000000                    	.ram
0000925F                    	.code
                            	//***************************************************************************//
                            	//程序：F_SPLC501_Initial_IO()
                            	//描述：SPLC501接口的初始化程序  C语言调用，汇编语言调用  
                            	//参数：无
                            	//声明：小丑	20050518	sunnorth  Mz Design
                            	//注意：破坏R1寄存器，保护R1
                            	//***************************************************************************//
                            	.public _F_SPLC501_Initial_IO
                            	_F_SPLC501_Initial_IO:
                            	F_SPLC501_Initial_IO:
0000925F 88 D2              			push	r1 to [sp]
00009260 11 93 02 70        			r1 = [P_IO_Data_Di]
00009262 09 A3 00 FF        			r1 |= M_IO_DATA_MASK
00009264 19 D3 02 70        			[P_IO_Data_Di] = r1
00009266 11 93 03 70        			r1 = [P_IO_Data_A]
00009268 09 A3 00 FF        			r1 |= M_IO_DATA_MASK
0000926A 19 D3 03 70        			[P_IO_Data_A] = r1
0000926C 11 93 01 70        			r1 = [P_IO_Data_B]
0000926E 09 A3 00 FF        			r1 |= M_IO_DATA_MASK
00009270 19 D3 00 70        			[P_IO_Data_D] = r1
                            			
00009272 11 93 07 70        			r1 = [P_IO_Ctrl_Di]
00009274 09 A3 70 02        			r1 |= (M_IO_EP+M_IO_AO+M_IO_RW+M_IO_CS)
00009276 19 D3 07 70        			[P_IO_Ctrl_Di] = r1
00009278 11 93 08 70        			r1 = [P_IO_Ctrl_A]
0000927A 09 A3 70 02        			r1 |= (M_IO_EP+M_IO_AO+M_IO_RW+M_IO_CS)
0000927C 19 D3 08 70        			[P_IO_Ctrl_A] = r1
0000927E 11 93 06 70        			r1 = [P_IO_Ctrl_B]
00009280 09 B3 8F FD        			r1 &= ~(M_IO_EP+M_IO_AO+M_IO_RW+M_IO_CS)
00009282 19 D3 05 70        			[P_IO_Ctrl_D] = r1
00009284 88 90              			pop		r1 from [sp]
00009285 90 9A              			retf
                            	//***************************************************************************//
                            	//程序：F_SPLC501_Write_Com()
                            	//描述：往SPLC501里写一个字节指令  C语言调用，汇编语言调用  
                            	//参数：r1送入要传送的指令
                            	//声明：小丑	20050518	sunnorth  Mz Design
                            	//注意：破坏R1寄存器，保护R2、R5寄存器
                            	//***************************************************************************//
                            	.public	_F_SPLC501_Write_Com
                            	_F_SPLC501_Write_Com:
                            	F_SPLC501_Write_Com:
00009286 90 D6              		push	r2,r3 to [sp]
00009287 88 DA              		push	r5 to [sp]
                            		
00009288 12 95 06 70        		r2 = [P_IO_Ctrl_B]				//得到IOB口的状态
0000928A 0A B5 BF FD        		r2 &= ~(M_IO_EP+M_IO_CS)		//EP CS to Low 20050613 Edit by xinqiang			
0000928C 1A D5 06 70        		[P_IO_Ctrl_B] = r2 				//EP Low
0000928E 12 95 06 70        		r2 = [P_IO_Ctrl_B]
00009290 0A B5 CF FF        		r2 &= ~(M_IO_AO+M_IO_RW)	
00009292 1A D5 06 70        		[P_IO_Ctrl_B] = r2				//AO RW Low
                            		
                            	.ifdef DATA_PORT_HIGHT
00009294 59 93              		r1 = r1 lsl 4
00009295 59 93              		r1 = r1 lsl 4
                            	.endif
                            		
00009296 13 97 01 70        		r3 = [P_IO_Data_B]
00009298 0B B7 FF 00        		r3 &= ~M_IO_DATA_MASK 
0000929A 09 B3 00 FF        		r1 &= M_IO_DATA_MASK					//Get Low Data Command
0000929C 03 03              		r1 = r1+r3
0000929D 19 D3 00 70        		[P_IO_Data]	= r1				//往数据口送数据
0000929F 00 EE              		nop
                            		
000092A0 0A A5 40 00        		r2 |= M_IO_EP					//EP to Hight
000092A2 1A D5 05 70        		[P_IO_Ctrl]	= r2
000092A4 00 EE              		nop
000092A5 0A B5 BF FF        		r2 &= ~M_IO_EP					//EP to Low
000092A7 0A A5 00 02        		r2 |= M_IO_CS					//CS to hight		20050613 Edit by xinqiang
000092A9 1A D5 05 70        		[P_IO_Ctrl] = r2
                            		
000092AB 88 98              		pop		r5 from [sp]
000092AC 90 92              		pop		r2,r3 from [sp]
000092AD 90 9A              		retf
                            		
                            	//***************************************************************************//
                            	//程序：F_SPLC501_Write_Data()
                            	//描述：往SPLC501里写一个字节数据  C语言调用，汇编语言调用  
                            	//参数：r1送入要传送的数据
                            	//声明：小丑	20050518	sunnorth  Mz Design
                            	//注意：破坏R1寄存器，保护R2、R5寄存器
                            	//***************************************************************************//
                            	.public _F_SPLC501_Write_Data
                            	_F_SPLC501_Write_Data:
                            	F_SPLC501_Write_Data:
000092AE 88 D4              		push	r2 to [sp]
                            		
000092AF 12 95 06 70        		r2 = [P_IO_Ctrl_B]				//得到IOB口的状态
000092B1 0A B5 BF FD        		r2 &= ~(M_IO_EP+M_IO_CS)		//EP CS to Low	20050613 Editby xinqiang					
000092B3 1A D5 06 70        		[P_IO_Ctrl_B] = r2 				//EP Low
000092B5 12 95 06 70        		r2 = [P_IO_Ctrl_B]
000092B7 50 A4              		r2 |= M_IO_AO
000092B8 0A B5 DF FF        		r2 &= ~(M_IO_RW)	
000092BA 1A D5 06 70        		[P_IO_Ctrl_B] = r2				//AO Hight, RW Low
                            		
                            	.ifdef DATA_PORT_HIGHT
000092BC 59 93              		r1 = r1 lsl 4
000092BD 59 93              		r1 = r1 lsl 4
                            	.endif
                            		
000092BE 13 97 01 70        		r3 = [P_IO_Data_B]
000092C0 0B B7 FF 00        		r3 &= ~M_IO_DATA_MASK 
000092C2 09 B3 00 FF        		r1 &= M_IO_DATA_MASK					//Get Low Data Command
000092C4 03 03              		r1 = r1+r3
000092C5 19 D3 00 70        		[P_IO_Data]	= r1				//往数据口送数据
000092C7 00 EE              		nop
                            		
000092C8 0A A5 40 00        		r2 |= M_IO_EP					//EP to Hight
000092CA 1A D5 05 70        		[P_IO_Ctrl]	= r2
000092CC 00 EE              		nop
000092CD 0A B5 BF FF        		r2 &= ~M_IO_EP					//EP to Low
000092CF 0A A5 00 02        		r2 |= M_IO_CS					//CS to Hight  20050613 Editby xinqiag
000092D1 1A D5 05 70        		[P_IO_Ctrl] = r2	
                            		
000092D3 88 92              		pop		r2 from [sp]
000092D4 90 9A              		retf
                            		
                            	//***************************************************************************//
                            	//程序：F_SPLC501_Read_Data()
                            	//描述：从SPLC501里读一个字节数据  C语言调用，汇编语言调用  
                            	//参数：r1输出传送的数据
                            	//声明：小丑	20050518	sunnorth  Mz Design
                            	//注意：破坏R1寄存器，保护R2、R5寄存器
                            	//***************************************************************************//
                            	.public _F_SPLC501_Read_Data
                            	.public F_SPLC501_Read_Data
                            	_F_SPLC501_Read_Data:
                            	F_SPLC501_Read_Data:
000092D5 40 F0 DA 92        		call F_SPLC501_Read_Data1
000092D7 40 F0 DA 92        		call F_SPLC501_Read_Data1
000092D9 90 9A              		retf
                            	F_SPLC501_Read_Data1:
000092DA 88 D4              		push	r2 to [sp]
000092DB 12 95 02 70        		r2 = [P_IO_Data_Di]				//设置数据口为输入
000092DD 0A B5 FF 00        		r2 &= ~M_IO_DATA_MASK
000092DF 1A D5 02 70        		[P_IO_Data_Di] = r2
                            		
000092E1 12 95 06 70        		r2 = [P_IO_Ctrl_B]				//得到IOB口的状态
000092E3 0A B5 BF FD        		r2 &= ~(M_IO_EP+M_IO_CS)		//EP CS to Low 20050613  Editby xinqiang					
000092E5 1A D5 06 70        		[P_IO_Ctrl_B] = r2 				//EP Low
000092E7 70 A4              		r2 |= (M_IO_AO+M_IO_RW)
000092E8 1A D5 06 70        		[P_IO_Ctrl_B] = r2				//AO Hight, RW Hight
000092EA 00 EE              		nop
000092EB 0A A5 40 00        		r2 |= M_IO_EP
000092ED 1A D5 06 70        		[P_IO_Ctrl_B] = r2				//产生EP高电平，
000092EF 00 EE              		nop
000092F0 0A B5 BF FF        		r2 &= ~M_IO_EP					//EP to Low
000092F2 1A D5 05 70        		[P_IO_Ctrl] = r2
000092F4 11 93 00 70        		r1 = [P_IO_Data]
000092F6 09 B3 00 FF        		r1 &= M_IO_DATA_MASK
000092F8 0A A5 00 02        		r2 |= M_IO_CS
000092FA 1A D5 05 70        		[P_IO_Ctrl] = r2
000092FC 12 95 02 70        		r2 = [P_IO_Data_Di]				//恢复数据口为输出状态
000092FE 0A A5 00 FF        		r2 |= M_IO_DATA_MASK
00009300 1A D5 02 70        		[P_IO_Data_Di] = r2
                            	.ifdef DATA_PORT_HIGHT
00009302 79 93              		r1 = r1 lsr 4
00009303 79 93              		r1 = r1 lsr 4
                            	.endif
00009304 88 92              		pop		r2 from [sp]
00009305 90 9A              		retf
                            	
                            	//***************************************************************************//
                            	//程序：F_SPLC501_Read_Status()
                            	//描述：从SPLC501里读状态字数据  C语言调用，汇编语言调用  
                            	//参数：r1输出传送的数据
                            	//声明：小丑	20050518	sunnorth  Mz Design
                            	//注意：破坏R1寄存器，保护R2寄存器
                            	//***************************************************************************//
                            	.public _F_SPLC501_Read_Status
                            	.public F_SPLC501_Read_Status
                            	_F_SPLC501_Read_Status:
                            	F_SPLC501_Read_Status:
00009306 88 D4              		push	r2 to [sp]
                            		
00009307 12 95 02 70        		r2 = [P_IO_Data_Di]				//设置数据口为输入
00009309 0A B5 FF 00        		r2 &= ~M_IO_DATA_MASK
0000930B 1A D5 02 70        		[P_IO_Data_Di] = r2
                            		
0000930D 12 95 06 70        		r2 = [P_IO_Ctrl_B]				//得到IOB口的状态
0000930F 0A B5 BF FD        		r2 &= ~(M_IO_EP+M_IO_CS)		//EP CS to Low 20050613 Editby Xinqiang					
00009311 1A D5 06 70        		[P_IO_Ctrl_B] = r2 				//EP Low
00009313 12 95 06 70        		r2 = [P_IO_Ctrl_B]
00009315 0A B5 EF FF        		r2 &= ~(M_IO_AO) 
00009317 60 A4              		r2 |= M_IO_RW
00009318 1A D5 06 70        		[P_IO_Ctrl_B] = r2				//AO Hight, RW Hight
0000931A 00 EE              		nop
0000931B 0A A5 40 00        		r2 |= M_IO_EP
0000931D 1A D5 06 70        		[P_IO_Ctrl_B] = r2				//产生EP高电平，
0000931F 00 EE              		nop
00009320 11 93 00 70        		r1 = [P_IO_Data]
00009322 09 B3 00 FF        		r1 &= M_IO_DATA_MASK
                            		
00009324 0A B5 BF FF        		r2 &= ~M_IO_EP					//EP to Low
00009326 0A A5 00 02        		r2 |= M_IO_CS					//CS to Hight 20050613 Editby Xinqiang
00009328 1A D5 05 70        		[P_IO_Ctrl] = r2	
                            		
0000932A 12 95 02 70        		r2 = [P_IO_Data_Di]				//恢复数据口为输出状态
0000932C 0A A5 00 FF        		r2 |= M_IO_DATA_MASK
0000932E 1A D5 02 70        		[P_IO_Data_Di] = r2
                            	.ifdef DATA_PORT_HIGHT
00009330 79 93              		r1 = r1 lsr 4
00009331 79 93              		r1 = r1 lsr 4
                            	.endif
00009332 88 92              		pop		r2 from [sp]
00009333 90 9A              		retf
                            			
                            	//****************************************************************************************************
                            	// 128X64I液晶底层驱动[6X8]字体库
                            	// 设计者: powerint
                            	// 描  述: [6X8]西文字符的字模数据 (纵向取模,字节倒序)
                            	// 日  期: 2004.4.27
                            	// 版本号: 1.1
                            	//****************************************************************************************************
                            	.PUBLIC _Asii8
                            	_Asii8:
00009334 00 00 00 00        	.DW  0x0000,0x0000,0x0000,0x0000,0x065F,0x0600,0x0007,0x0300,0x0703,0x0024,0x7E24,0x7E24  
         00 00 00 00
         5F 06 00 06
         07 00 00 03
         03 07 24 00
         24 7E 24 7E
00009340 24 00 6A 2B        	.DW  0x0024,0x2B6A,0x1200,0x0063,0x1308,0x6463,0x0036,0x4956,0x2050,0x0000,0x0703,0x0000 
         00 12 63 00
         08 13 63 64
         36 00 56 49
         50 20 00 00
         03 07 00 00
0000934C 00 00 41 3E        	.DW  0x0000,0x3E41,0x0000,0x0000,0x413E,0x0000,0x0008,0x3E1C,0x3E08,0x0008,0x083E,0x0808  
         00 00 00 00
         3E 41 00 00
         08 00 1C 3E
         08 3E 08 00
         3E 08 08 08
00009358 00 00 60 E0        	.DW  0x0000,0xE060,0x0000,0x0008,0x0808,0x0808,0x0000,0x6060,0x0000,0x0020,0x1008,0x0402
         00 00 08 00
         08 08 08 08
         00 00 60 60
         00 00 20 00
         08 10 02 04
00009364 3E 00 49 51        	.DW  0x003E,0x5149,0x453E,0x0000,0x427F,0x4000,0x0062,0x5149,0x4946,0x0022,0x4949,0x4936
         3E 45 00 00
         7F 42 00 40
         62 00 49 51
         46 49 22 00
         49 49 36 49
00009370 18 00 12 14        	.DW  0x0018,0x1412,0x7F10,0x002F,0x4949,0x4931,0x003C,0x4A49,0x4930,0x0001,0x7109,0x0503
         10 7F 2F 00
         49 49 31 49
         3C 00 49 4A
         30 49 01 00
         09 71 03 05
0000937C 36 00 49 49        	.DW  0x0036,0x4949,0x4936,0x0006,0x4949,0x291E,0x0000,0x6C6C,0x0000,0x0000,0xEC6C,0x0000
         36 49 06 00
         49 49 1E 29
         00 00 6C 6C
         00 00 00 00
         6C EC 00 00
00009388 08 00 22 14        	.DW  0x0008,0x1422,0x4100,0x0024,0x2424,0x2424,0x0000,0x4122,0x1408,0x0002,0x0159,0x0906
         00 41 24 00
         24 24 24 24
         00 00 22 41
         08 14 02 00
         59 01 06 09
00009394 3E 00 5D 41        	.DW  0x003E,0x415D,0x551E,0x007E,0x1111,0x117E,0x007F,0x4949,0x4936,0x003E,0x4141,0x4122
         1E 55 7E 00
         11 11 7E 11
         7F 00 49 49
         36 49 3E 00
         41 41 22 41
000093A0 7F 00 41 41        	.DW  0x007F,0x4141,0x413E,0x007F,0x4949,0x4941,0x007F,0x0909,0x0901,0x003E,0x4149,0x497A
         3E 41 7F 00
         49 49 41 49
         7F 00 09 09
         01 09 3E 00
         49 41 7A 49
000093AC 7F 00 08 08        	.DW  0x007F,0x0808,0x087F,0x0000,0x417F,0x4100,0x0030,0x4040,0x403F,0x007F,0x0814,0x2241
         7F 08 00 00
         7F 41 00 41
         30 00 40 40
         3F 40 7F 00
         14 08 41 22
000093B8 7F 00 40 40        	.DW  0x007F,0x4040,0x4040,0x007F,0x0204,0x027F,0x007F,0x0204,0x087F,0x003E,0x4141,0x413E
         40 40 7F 00
         04 02 7F 02
         7F 00 04 02
         7F 08 3E 00
         41 41 3E 41
000093C4 7F 00 09 09        	.DW  0x007F,0x0909,0x0906,0x003E,0x4151,0x215E,0x007F,0x0909,0x1966,0x0026,0x4949,0x4932
         06 09 3E 00
         51 41 5E 21
         7F 00 09 09
         66 19 26 00
         49 49 32 49
000093D0 01 00 7F 01        	.DW  0x0001,0x017F,0x0101,0x003F,0x4040,0x403F,0x001F,0x2040,0x201F,0x003F,0x403C,0x403F
         01 01 3F 00
         40 40 3F 40
         1F 00 40 20
         1F 20 3F 00
         3C 40 3F 40
000093DC 63 00 08 14        	.DW  0x0063,0x1408,0x1463,0x0007,0x0870,0x0807,0x0071,0x4945,0x4300,0x0000,0x7F41,0x4100
         63 14 07 00
         70 08 07 08
         71 00 45 49
         00 43 00 00
         41 7F 00 41
000093E8 02 00 08 04        	.DW  0x0002,0x0408,0x1020,0x0000,0x4141,0x7F00,0x0004,0x0201,0x0204,0x8080,0x8080,0x8080
         20 10 00 00
         41 41 00 7F
         04 00 01 02
         04 02 80 80
         80 80 80 80
000093F4 00 00 07 03        	.DW  0x0000,0x0307,0x0000,0x0020,0x5454,0x5478,0x007F,0x4444,0x4438,0x0038,0x4444,0x4428
         00 00 20 00
         54 54 78 54
         7F 00 44 44
         38 44 38 00
         44 44 28 44
00009400 38 00 44 44        	.DW  0x0038,0x4444,0x447F,0x0038,0x5454,0x5408,0x0008,0x7E09,0x0900,0x0018,0xA4A4,0xA47C
         7F 44 38 00
         54 54 08 54
         08 00 09 7E
         00 09 18 00
         A4 A4 7C A4
0000940C 7F 00 04 04        	.DW  0x007F,0x0404,0x7800,0x0000,0x007D,0x4000,0x0040,0x8084,0x7D00,0x007F,0x1028,0x4400
         00 78 00 00
         7D 00 00 40
         40 00 84 80
         00 7D 7F 00
         28 10 00 44
00009418 00 00 7F 00        	.DW  0x0000,0x007F,0x4000,0x007C,0x0418,0x0478,0x007C,0x0404,0x7800,0x0038,0x4444,0x4438
         00 40 7C 00
         18 04 78 04
         7C 00 04 04
         00 78 38 00
         44 44 38 44
00009424 FC 00 44 44        	.DW  0x00FC,0x4444,0x4438,0x0038,0x4444,0x44FC,0x0044,0x7844,0x0408,0x0008,0x5454,0x5420
         38 44 38 00
         44 44 FC 44
         44 00 44 78
         08 04 08 00
         54 54 20 54
00009430 04 00 44 3E        	.DW  0x0004,0x3E44,0x2400,0x003C,0x4020,0x7C00,0x001C,0x2040,0x201C,0x003C,0x6030,0x603C
         00 24 3C 00
         20 40 00 7C
         1C 00 40 20
         1C 20 3C 00
         30 60 3C 60
0000943C 6C 00 10 10        	.DW  0x006C,0x1010,0x6C00,0x009C,0xA060,0x3C00,0x0064,0x5454,0x4C00,0x0008,0x3E41,0x4100
         00 6C 9C 00
         60 A0 00 3C
         64 00 54 54
         00 4C 08 00
         41 3E 00 41
00009448 00 00 77 00        	.DW  0x0000,0x0077,0x0000,0x0000,0x4141,0x3E08,0x0002,0x0102,0x0100,0x1038,0x7C10,0x1010 
         00 00 00 00
         41 41 08 3E
         02 00 02 01
         00 01 38 10
         10 7C 10 10
                            	//****************************************************************************************************
                            	// 128X64I液晶底层驱动[8X16]字体库
                            	// 设计者: powerint
                            	// 描  述: [8X16]西文字符的字模数据 (纵向取模,字节倒序)
                            	// 日  期: 2004.4.27
                            	// 版本号: 1.1
                            	//****************************************************************************************************
                            	.PUBLIC _Asii16	//xinqiang Edit 为并且减少ROM的占用，仅为实验箱综合实验修改
                            	_Asii16:
00009454 00 00 00 00        	.DW  0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000
         00 00 00 00
         00 00 00 00
         00 00 00 00
0000945C 00 00 F8 00        	.DW  0x0000,0x00F8,0x0000,0x0000,0x0000,0x0033,0x3000,0x0000
         00 00 00 00
         00 00 33 00
         00 30 00 00
00009464 10 00 06 0C        	.DW  0x0010,0x0C06,0x100C,0x0600,0x0000,0x0000,0x0000,0x0000
         0C 10 00 06
         00 00 00 00
         00 00 00 00
0000946C C0 40 40 78        	.DW  0x40C0,0x7840,0xC078,0x4000,0x043F,0x0404,0x3F04,0x0400
         78 C0 00 40
         3F 04 04 04
         04 3F 00 04
00009474 70 00 FC 88        	.DW  0x0070,0x88FC,0x0830,0x0000,0x0018,0x20FF,0x211E,0x0000
         30 08 00 00
         18 00 FF 20
         1E 21 00 00
0000947C 08 F0 00 F0        	.DW  0xF008,0xF000,0xE018,0x0000,0x0021,0x1C03,0x1E21,0x1E00
         18 E0 00 00
         21 00 03 1C
         21 1E 00 1E
00009484 F0 00 88 08        	.DW  0x00F0,0x0888,0x7000,0x0000,0x1E21,0x2324,0x1927,0x2110
         00 70 00 00
         21 1E 24 23
         27 19 10 21
0000948C 16 10 00 0E        	.DW  0x1016,0x0E00,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000
         00 00 00 00
         00 00 00 00
         00 00 00 00
00009494 00 00 E0 00        	.DW  0x0000,0x00E0,0x1804,0x0200,0x0000,0x0007,0x1820,0x4000
         04 18 00 02
         00 00 07 00
         20 18 00 40
0000949C 02 00 18 04        	.DW  0x0002,0x0418,0xE000,0x0000,0x0040,0x2018,0x0700,0x0000
         00 E0 00 00
         40 00 18 20
         00 07 00 00
000094A4 40 40 F0 80        	.DW  0x4040,0x80F0,0x8040,0x4000,0x0202,0x010F,0x0102,0x0200
         40 80 00 40
         02 02 0F 01
         02 01 00 02
000094AC 00 00 F0 00        	.DW  0x0000,0x00F0,0x0000,0x0000,0x0101,0x011F,0x0101,0x0100
         00 00 00 00
         01 01 1F 01
         01 01 00 01
000094B4 00 00 00 00        	.DW  0x0000,0x0000,0x0000,0x0000,0x80B0,0x7000,0x0000,0x0000
         00 00 00 00
         B0 80 00 70
         00 00 00 00
000094BC 00 00 00 00        	.DW  0x0000,0x0000,0x0000,0x0000,0x0001,0x0101,0x0101,0x0101
         00 00 00 00
         01 00 01 01
         01 01 01 01
000094C4 00 00 00 00        	.DW  0x0000,0x0000,0x0000,0x0000,0x0030,0x3000,0x0000,0x0000
         00 00 00 00
         30 00 00 30
         00 00 00 00
000094CC 00 00 00 00        	.DW  0x0000,0x0000,0x8060,0x1804,0x0060,0x1806,0x0100,0x0000
         60 80 04 18
         60 00 06 18
         00 01 00 00
000094D4 E0 00 08 10        	.DW  0x00E0,0x1008,0x0810,0xE000,0x000F,0x1020,0x2010,0x0F00
         10 08 00 E0
         0F 00 20 10
         10 20 00 0F
000094DC 10 00 F8 10        	.DW  0x0010,0x10F8,0x0000,0x0000,0x0020,0x203F,0x2020,0x0000
         00 00 00 00
         20 00 3F 20
         20 20 00 00
000094E4 70 00 08 08        	.DW  0x0070,0x0808,0x0888,0x7000,0x0030,0x2824,0x2221,0x3000
         88 08 00 70
         30 00 24 28
         21 22 00 30
000094EC 30 00 88 08        	.DW  0x0030,0x0888,0x8848,0x3000,0x0018,0x2020,0x2011,0x0E00
         48 88 00 30
         18 00 20 20
         11 20 00 0E
000094F4 00 00 20 C0        	.DW  0x0000,0xC020,0x10F8,0x0000,0x0007,0x0424,0x243F,0x2400
         F8 10 00 00
         07 00 24 04
         3F 24 00 24
000094FC F8 00 88 08        	.DW  0x00F8,0x0888,0x8808,0x0800,0x0019,0x2120,0x2011,0x0E00
         08 88 00 08
         19 00 20 21
         11 20 00 0E
00009504 E0 00 88 10        	.DW  0x00E0,0x1088,0x8818,0x0000,0x000F,0x1120,0x2011,0x0E00
         18 88 00 00
         0F 00 20 11
         11 20 00 0E
0000950C 38 00 08 08        	.DW  0x0038,0x0808,0xC838,0x0800,0x0000,0x003F,0x0000,0x0000
         38 C8 00 08
         00 00 3F 00
         00 00 00 00
00009514 70 00 08 88        	.DW  0x0070,0x8808,0x0888,0x7000,0x001C,0x2221,0x2122,0x1C00
         88 08 00 70
         1C 00 21 22
         22 21 00 1C
0000951C E0 00 08 10        	.DW  0x00E0,0x1008,0x0810,0xE000,0x0000,0x3122,0x2211,0x0F00
         10 08 00 E0
         00 00 22 31
         11 22 00 0F
00009524 00 00 C0 00        	.DW  0x0000,0x00C0,0xC000,0x0000,0x0000,0x0030,0x3000,0x0000
         00 C0 00 00
         00 00 30 00
         00 30 00 00
0000952C 00 00 80 00        	.DW  0x0000,0x0080,0x0000,0x0000,0x0000,0x8060,0x0000,0x0000
         00 00 00 00
         00 00 60 80
         00 00 00 00
00009534 00 00 40 80        	.DW  0x0000,0x8040,0x2010,0x0800,0x0001,0x0204,0x0810,0x2000
         10 20 00 08
         01 00 04 02
         10 08 00 20
0000953C 40 40 40 40        	.DW  0x4040,0x4040,0x4040,0x4000,0x0404,0x0404,0x0404,0x0400
         40 40 00 40
         04 04 04 04
         04 04 00 04
00009544 08 00 20 10        	.DW  0x0008,0x1020,0x4080,0x0000,0x0020,0x1008,0x0402,0x0100
         80 40 00 00
         20 00 08 10
         02 04 00 01
0000954C 70 00 08 48        	.DW  0x0070,0x4808,0x0808,0xF000,0x0000,0x0030,0x3601,0x0000
         08 08 00 F0
         00 00 30 00
         01 36 00 00
00009554 30 C0 28 C8        	.DW  0xC030,0xC828,0xE810,0xE000,0x0718,0x2724,0x2314,0x0B00
         10 E8 00 E0
         18 07 24 27
         14 23 00 0B
0000955C 00 00 38 C0        	.DW  0x0000,0xC038,0xE000,0x0000,0x203C,0x2302,0x0227,0x3820
         00 E0 00 00
         3C 20 02 23
         27 02 20 38
00009564 F8 08 88 88        	.DW  0x08F8,0x8888,0x8870,0x0000,0x203F,0x2020,0x2011,0x0E00
         70 88 00 00
         3F 20 20 20
         11 20 00 0E
0000956C 30 C0 08 08        	.DW  0xC030,0x0808,0x0808,0x3800,0x0718,0x2020,0x2010,0x0800
         08 08 00 38
         18 07 20 20
         10 20 00 08
00009574 F8 08 08 08        	.DW  0x08F8,0x0808,0x0810,0xE000,0x203F,0x2020,0x2010,0x0F00
         10 08 00 E0
         3F 20 20 20
         10 20 00 0F
0000957C F8 08 88 88        	.DW  0x08F8,0x8888,0xE808,0x1000,0x203F,0x2020,0x2320,0x1800
         08 E8 00 10
         3F 20 20 20
         20 23 00 18
00009584 F8 08 88 88        	.DW  0x08F8,0x8888,0xE808,0x1000,0x203F,0x2000,0x0300,0x0000
         08 E8 00 10
         3F 20 00 20
         00 03 00 00
0000958C 30 C0 08 08        	.DW  0xC030,0x0808,0x0838,0x0000,0x0718,0x2020,0x221E,0x0200
         38 08 00 00
         18 07 20 20
         1E 22 00 02
00009594 F8 08 00 08        	.DW  0x08F8,0x0800,0x0008,0xF808,0x203F,0x2101,0x0121,0x3F20
         08 00 08 F8
         3F 20 01 21
         21 01 20 3F
0000959C 08 00 F8 08        	.DW  0x0008,0x08F8,0x0808,0x0000,0x0020,0x203F,0x2020,0x0000
         08 08 00 00
         20 00 3F 20
         20 20 00 00
000095A4 00 00 08 08        	.DW  0x0000,0x0808,0xF808,0x0800,0xC080,0x8080,0x7F00,0x0000
         08 F8 00 08
         80 C0 80 80
         00 7F 00 00
000095AC F8 08 C0 88        	.DW  0x08F8,0x88C0,0x2818,0x0800,0x203F,0x2001,0x2638,0x2000
         18 28 00 08
         3F 20 01 20
         38 26 00 20
000095B4 F8 08 00 08        	.DW  0x08F8,0x0800,0x0000,0x0000,0x203F,0x2020,0x2020,0x3000
         00 00 00 00
         3F 20 20 20
         20 20 00 30
000095BC F8 08 00 F8        	.DW  0x08F8,0xF800,0xF8F8,0x0800,0x203F,0x003F,0x003F,0x2000
         F8 F8 00 08
         3F 20 3F 00
         3F 00 00 20
000095C4 F8 08 C0 30        	.DW  0x08F8,0x30C0,0x0008,0xF808,0x203F,0x2000,0x0718,0x3F00
         08 00 08 F8
         3F 20 00 20
         18 07 00 3F
000095CC 10 E0 08 08        	.DW  0xE010,0x0808,0x0810,0xE000,0x0F10,0x2020,0x2010,0x0F00
         10 08 00 E0
         10 0F 20 20
         10 20 00 0F
000095D4 F8 08 08 08        	.DW  0x08F8,0x0808,0x0808,0xF000,0x203F,0x2101,0x0101,0x0000
         08 08 00 F0
         3F 20 01 21
         01 01 00 00
000095DC 10 E0 08 08        	.DW  0xE010,0x0808,0x0810,0xE000,0x0F18,0x2424,0x3850,0x4F00
         10 08 00 E0
         18 0F 24 24
         50 38 00 4F
000095E4 F8 08 88 88        	.DW  0x08F8,0x8888,0x8888,0x7000,0x203F,0x2000,0x030C,0x3020
         88 88 00 70
         3F 20 00 20
         0C 03 20 30
000095EC 70 00 08 88        	.DW  0x0070,0x8808,0x0808,0x3800,0x0038,0x2021,0x2122,0x1C00
         08 08 00 38
         38 00 21 20
         22 21 00 1C
000095F4 08 18 F8 08        	.DW  0x1808,0x08F8,0x0808,0x1800,0x0000,0x203F,0x2000,0x0000
         08 08 00 18
         00 00 3F 20
         00 20 00 00
000095FC F8 08 00 08        	.DW  0x08F8,0x0800,0x0008,0xF808,0x001F,0x2020,0x2020,0x1F00
         08 00 08 F8
         1F 00 20 20
         20 20 00 1F
00009604 78 08 00 88        	.DW  0x0878,0x8800,0x00C8,0x3808,0x0000,0x0738,0x0E01,0x0000
         C8 00 08 38
         00 00 38 07
         01 0E 00 00
0000960C 08 F8 F8 00        	.DW  0xF808,0x00F8,0x0008,0xF800,0x033C,0x0700,0x073C,0x0300
         08 00 00 F8
         3C 03 00 07
         3C 07 00 03
00009614 18 08 80 68        	.DW  0x0818,0x6880,0x8068,0x1808,0x2030,0x2C03,0x032C,0x3020
         68 80 08 18
         30 20 03 2C
         2C 03 20 30
0000961C 38 08 00 C8        	.DW  0x0838,0xC800,0xC838,0x0800,0x0000,0x203F,0x2000,0x0000
         38 C8 00 08
         00 00 3F 20
         00 20 00 00
00009624 08 10 08 08        	.DW  0x1008,0x0808,0xC838,0x0800,0x2038,0x2621,0x2020,0x1800
         38 C8 00 08
         38 20 21 26
         20 20 00 18
0000962C 00 00 FE 00        	.DW  0x0000,0x00FE,0x0202,0x0200,0x0000,0x007F,0x4040,0x4000
         02 02 00 02
         00 00 7F 00
         40 40 00 40
00009634 0C 00 C0 30        	.DW  0x000C,0x30C0,0x0000,0x0000,0x0000,0x0001,0x0638,0xC000
         00 00 00 00
         00 00 01 00
         38 06 00 C0
0000963C 02 00 02 02        	.DW  0x0002,0x0202,0xFE00,0x0000,0x0040,0x4040,0x7F00,0x0000
         00 FE 00 00
         40 00 40 40
         00 7F 00 00
00009644 00 00 02 04        	.DW  0x0000,0x0402,0x0202,0x0400,0x0000,0x0000,0x0000,0x0000
         02 02 00 04
         00 00 00 00
         00 00 00 00
0000964C 00 00 00 00        	.DW  0x0000,0x0000,0x0000,0x0000,0x8080,0x8080,0x8080,0x8080
         00 00 00 00
         80 80 80 80
         80 80 80 80
00009654 02 00 04 02        	.DW  0x0002,0x0204,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000
         00 00 00 00
         00 00 00 00
         00 00 00 00
0000965C 00 00 80 80        	.DW  0x0000,0x8080,0x8080,0x0000,0x0019,0x2422,0x2222,0x3F20
         80 80 00 00
         19 00 22 24
         22 22 20 3F
00009664 F8 08 80 00        	.DW  0x08F8,0x0080,0x8000,0x0000,0x003F,0x1120,0x2011,0x0E00
         00 80 00 00
         3F 00 20 11
         11 20 00 0E
0000966C 00 00 80 00        	.DW  0x0000,0x0080,0x8080,0x0000,0x000E,0x1120,0x2020,0x1100
         80 80 00 00
         0E 00 20 11
         20 20 00 11
00009674 00 00 80 00        	.DW  0x0000,0x0080,0x8088,0xF800,0x000E,0x1120,0x2010,0x3F20
         88 80 00 F8
         0E 00 20 11
         10 20 20 3F
0000967C 00 00 80 80        	.DW  0x0000,0x8080,0x8080,0x0000,0x001F,0x2222,0x2222,0x1300
         80 80 00 00
         1F 00 22 22
         22 22 00 13
00009684 80 00 F0 80        	.DW  0x0080,0x80F0,0x8888,0x8818,0x0020,0x203F,0x2020,0x0000
         88 88 18 88
         20 00 3F 20
         20 20 00 00
0000968C 00 00 80 80        	.DW  0x0000,0x8080,0x8080,0x8000,0x006B,0x9494,0x9493,0x6000
         80 80 00 80
         6B 00 94 94
         93 94 00 60
00009694 F8 08 80 00        	.DW  0x08F8,0x0080,0x8080,0x0000,0x203F,0x2100,0x0020,0x3F20
         80 80 00 00
         3F 20 00 21
         20 00 20 3F
0000969C 80 00 98 98        	.DW  0x0080,0x9898,0x0000,0x0000,0x0020,0x203F,0x2020,0x0000
         00 00 00 00
         20 00 3F 20
         20 20 00 00
000096A4 00 00 80 00        	.DW  0x0000,0x0080,0x9898,0x0000,0x00C0,0x8080,0x807F,0x0000
         98 98 00 00
         C0 00 80 80
         7F 80 00 00
000096AC F8 08 00 00        	.DW  0x08F8,0x0000,0x8080,0x8000,0x203F,0x2402,0x2D30,0x2000
         80 80 00 80
         3F 20 02 24
         30 2D 00 20
000096B4 08 00 F8 08        	.DW  0x0008,0x08F8,0x0000,0x0000,0x0020,0x203F,0x2020,0x0000
         00 00 00 00
         20 00 3F 20
         20 20 00 00
000096BC 80 80 80 80        	.DW  0x8080,0x8080,0x8080,0x8000,0x203F,0x2000,0x3F20,0x003F
         80 80 00 80
         3F 20 00 20
         20 3F 3F 00
000096C4 80 80 80 00        	.DW  0x8080,0x0080,0x8080,0x0000,0x203F,0x2100,0x0020,0x3F20
         80 80 00 00
         3F 20 00 21
         20 00 20 3F
000096CC 00 00 80 80        	.DW  0x0000,0x8080,0x8080,0x0000,0x001F,0x2020,0x2020,0x1F00
         80 80 00 00
         1F 00 20 20
         20 20 00 1F
000096D4 80 80 80 00        	.DW  0x8080,0x0080,0x8000,0x0000,0x80FF,0xA120,0x2011,0x0E00
         00 80 00 00
         FF 80 20 A1
         11 20 00 0E
000096DC 00 00 80 00        	.DW  0x0000,0x0080,0x8080,0x8000,0x000E,0x1120,0x20A0,0xFF80
         80 80 00 80
         0E 00 20 11
         A0 20 80 FF
000096E4 80 80 00 80        	.DW  0x8080,0x8000,0x8080,0x8000,0x2020,0x3F21,0x2000,0x0100
         80 80 00 80
         20 20 21 3F
         00 20 00 01
000096EC 00 00 80 80        	.DW  0x0000,0x8080,0x8080,0x8000,0x0033,0x2424,0x2424,0x1900
         80 80 00 80
         33 00 24 24
         24 24 00 19
000096F4 80 00 E0 80        	.DW  0x0080,0x80E0,0x8080,0x0000,0x0000,0x001F,0x2020,0x0000
         80 80 00 00
         00 00 1F 00
         20 20 00 00
000096FC 80 80 00 00        	.DW  0x8080,0x0000,0x0080,0x8000,0x001F,0x2020,0x2010,0x3F20
         80 00 00 80
         1F 00 20 20
         10 20 20 3F
00009704 80 80 00 80        	.DW  0x8080,0x8000,0x0080,0x8080,0x0001,0x0E30,0x0806,0x0100
         80 00 80 80
         01 00 30 0E
         06 08 00 01
0000970C 80 80 80 00        	.DW  0x8080,0x0080,0x0080,0x8080,0x0F30,0x0C03,0x0C30,0x0F00
         80 00 80 80
         30 0F 03 0C
         30 0C 00 0F
00009714 80 00 00 80        	.DW  0x0080,0x8000,0x8080,0x8000,0x0020,0x312E,0x0E31,0x2000
         80 80 00 80
         20 00 2E 31
         31 0E 00 20
0000971C 80 80 00 80        	.DW  0x8080,0x8000,0x0080,0x8080,0x8081,0x8E70,0x1806,0x0100
         80 00 80 80
         81 80 70 8E
         06 18 00 01
00009724 80 00 80 80        	.DW  0x0080,0x8080,0x8080,0x8000,0x0021,0x302C,0x2221,0x3000
         80 80 00 80
         21 00 2C 30
         21 22 00 30
0000972C 00 00 00 00        	.DW  0x0000,0x0000,0x807C,0x0202,0x0000,0x0000,0x003F,0x4040
         7C 80 02 02
         00 00 00 00
         3F 00 40 40
00009734 00 00 00 00        	.DW  0x0000,0x0000,0xFF00,0x0000,0x0000,0x0000,0xFF00,0x0000
         00 FF 00 00
         00 00 00 00
         00 FF 00 00
0000973C 02 00 7C 02        	.DW  0x0002,0x027C,0x8000,0x0000,0x0040,0x403F,0x0000,0x0000
         00 80 00 00
         40 00 3F 40
         00 00 00 00
00009744 06 00 01 01        	.DW  0x0006,0x0101,0x0202,0x0404,0x0000,0x0000,0x0000,0x0000
         02 02 04 04
         00 00 00 00
         00 00 00 00
0 error(s), 0 warning(s).






























































